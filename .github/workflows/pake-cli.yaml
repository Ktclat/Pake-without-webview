name: Build Windows EXE Package With WebView2

env:
  NODE_VERSION: "22"
  PNPM_VERSION: "10.15.0"

on:
  workflow_dispatch:
    inputs:
      url:
        description: "URL"
        required: true
      name:
        description: "App name"
        required: true
      icon:
        description: "Icon URL (optional)"
        required: false
      width:
        description: "Window width (optional)"
        required: false
        default: "1200"
      height:
        description: "Window height (optional)"
        required: false
        default: "780"
      fullscreen:
        description: "Fullscreen at startup (optional)"
        required: false
        type: boolean
        default: false
      hide_title_bar:
        description: "Hide TitleBar (optional)"
        required: false
        type: boolean
        default: false

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node & PNPM
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install pake-cli
        run: pnpm install pake-cli@latest

      # 下载 WebView2 固定版本
      - name: Download WebView2 Runtime
        shell: pwsh
        run: |
          $webview2Url = "https://msedge.sf.dl.delivery.mp.microsoft.com/filestreamingservice/files/454b3964-bfe5-4eff-82da-74c3125b592b/Microsoft.WebView2.FixedVersionRuntime.141.0.3537.99.x64.cab"
          $outputCab = "webview2.cab"
          $destFolder = "WebView2Runtime"

          Write-Host "Downloading WebView2 fixed version runtime..."
          Invoke-WebRequest -Uri $webview2Url -OutFile $outputCab

          Write-Host "Extracting WebView2 runtime..."
          mkdir $destFolder
          expand.exe $outputCab -F:* $destFolder

      # 构建 EXE 和前端资源
      - name: Build EXE and frontend
        run: node ./scripts/github-action-build.js
        env:
          URL: ${{ inputs.url }}
          NAME: ${{ inputs.name }}
          ICON: ${{ inputs.icon }}
          WIDTH: ${{ inputs.width }}
          HEIGHT: ${{ inputs.height }}
          FULLSCREEN: ${{ inputs.fullscreen }}
          HIDE_TITLE_BAR: ${{ inputs.hide_title_bar }}

      # 将前端资源、EXE 和 WebView2 打包成压缩包
      - name: Package output into ZIP
        shell: pwsh
        run: |
          $outputDir = "node_modules/pake-cli/output"
          $zipName = "output-${{ github.run_id }}.zip"

          Write-Host "Creating ZIP package..."
          # 确保包含 EXE、前端资源和 WebView2
          Compress-Archive -Path "$outputDir\*" -DestinationPath $zipName -Force

      - name: Upload ZIP package
        uses: actions/upload-artifact@v4
        with:
          name: packaged-app
          path: output-*.zip